{% extends "base.html.twig" %}

{% block title %}Reports{% endblock %}

{% block body %}
    <article class="art-row">
        <div class="div-col-1">
            <h2>Reports</h2>
            <ul class="about-links">
                <li><a href="#kmom01">Kmom 01</a></li>
                <li><a href="#kmom02">Kmom 02</a></li>
            </ul>
        </div>

        <div class="div-col-2">
            <h2 id="kmom01">Kmom 01</h2>
            <p><b>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</b></p>
            <p>Jag har ju gått några tidigare kurser som behandlat objektorientering, den som jag spontant tänker på är oopython-kursen och även om det var ett tag 
            sedan så minns jag ändå grunderna kring ett objektorienterat förhållningssätt till kod.</p>
            <p><b>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</b></p>
            <p>Klasser och objekt i php fungerar lite som inkapslade segment utav kod som är knutna till klassen eller objektet dessa kan vi sedan välja själva hur vi manipulerar dem 
            eller vilken åtkomst som skall ges till de specifika delarna för en användare eller för all del en kollega. De grunder jag tänker är viktiga att förstå för att komma igång 
            med klasser och object är kanske framför allt just att förstå att attribut och metoder är kopplade till klassen/objektet och att vi beroende på hur vi skriver klassen också 
            kan bestämma hur dessa ska vara möjliga att komma åt eller ändra. En annan viktig, användbar och intressant aspekt av det hela är arv, det går nämligen att ärva attribut och 
            metoder från en klass. Det är något som kan vara mycket användbart om än lite svårare att få en övergriplig koll på.</p>
            <p><b>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</b></p>
            <p>Jag tror jag känner samma saker nu som när jag arbetade med en tidigare version av kursen som då hette oophp. Det är väldigt trevligt att använda en struktur som denna 
            i skapandet av en me-page då det här mer modullära förhållningssättet gör det enklare att dela upp och hålla koll på vad respektive modul eller del gör och ska göra. 
            Det som komplicerar det blir då snarare själva pusslandet med modulerna och att skapa sig en översikt kring vart saker skall vara och vart de passar in och hur själva kopplingarna 
            görs.</p>
            <p><b>PHP The Right Way, vilka delar in den finner du extra intressanta och värdefulla?</b></p>
            <p>Jag fastnade framför allt för kapitel 7 och mer specifikt delen kring S.O.L.I.D. det känns som ett bra tänk att ha för att kunna återanvända kod på ett bra och 
            smidigt sätt. Framför allt fastnade jag på O'et som står för Open/Closed Principle, alltså att klasser med mera skall vara designade på ett sådant sätt att de kan byggas på 
            men att det som redan är en del av dem inte ska modifieras. Jag tänker instinktivt att det kan bespara en mycket huvudbry om man kan hålla sig till den principen, framför allt 
            när kodbasen växer i storlek. Jag kan tänka mig ett scenario där mycket kod förlitar sig på en klassmetod eller liknande och den ändras (vilket vore emot principen) vilket leder 
            till att massa andra delar utav koden slutar fungera. Det scenariot låter som en källa till mycket, mycket arbete. Sen gäller det att lyckas hålla sig till dessa principer också 
            men det tänker jag kommer genom övning, arbete och att man gör sådana kostsamma misstag.</p>
            <p><b>TIL för detta kmom?</b></p>
            <p>Att det ibland är allt strul som man lär sig mest av. Jag hade mycket strul med php-versioner, npm-versioner, nodeJS-versioner etc i ubuntu men jag lärde mig genom det också 
            att man kan ha flera versioner av dessa saker samtidigt, hur man införskaffar dem samt hur man växlar mellan dom.</p>

            <h2 id="kmom02">Kmom 02</h2>
            <p>Kmom02 text</p>
        </div>
    </article>
{% endblock %}